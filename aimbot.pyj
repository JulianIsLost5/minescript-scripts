import system.pyj.minescript as m

Double = JavaClass("java.lang.Double")
Minecraft = JavaClass("net.minecraft.client.Minecraft")
BowItem = JavaClass("net.minecraft.world.item.BowItem")

mc = Minecraft.getInstance()

def lock_on(target): # target is subclass of entity
    def _player_bow(player):
        return player.getUseItem() # missing: safety logic if bow is not in use
        
    def _arrow_velocity(player):
        bow = _player_bow(player)
        
        use_ticks = BowItem.getUseDuration(bow, player) - player.getUseItemRemainingTicks()
        pull = BowItem.getPowerForTime(use_ticks)
        return pull * 3.0
        
    player_pos = mc.player.position()
    target_pos = target.position()
    
    direction = target.getMotionDirection().getUnitVec3()
    speed = target.getSpeed()
    
    distance = player_pos.distanceTo(target_pos)
    duration = distance/_arrow_velocity(mc.player)
    
    future_pos = target_pos.add(direction.scale(Double(speed)).scale(Double(duration)))
    m.player_look_at(future_pos.x, future_pos.y, future_pos.z)
