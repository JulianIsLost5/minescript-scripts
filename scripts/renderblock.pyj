Blocks = JavaClass("net.minecraft.world.level.block.Blocks") # type: ignore
Minecraft = JavaClass("net.minecraft.client.Minecraft") # type: ignore
PoseStack = JavaClass("com.mojang.blaze3d.vertex.PoseStack") # type: ignore
RenderType = JavaClass("net.minecraft.client.renderer.RenderType") # type: ignore
WorldRenderEvents = JavaClass("net.fabricmc.fabric.api.client.rendering.v1.WorldRenderEvents") # type: ignore
WorldRenderEventsLast = JavaClass("net.fabricmc.fabric.api.client.rendering.v1.WorldRenderEvents$Last") # type: ignore
Vec3 = JavaClass("net.minecraft.world.phys.Vec3") # type: ignore
OverlayTexture = JavaClass("net.minecraft.client.renderer.texture.OverlayTexture") # type: ignore


target_pos = Vec3(14, -60, 3) 
minecraft = Minecraft.getInstance()
world = minecraft.level


show = True
def on_press_key(event):
    global show

    if event.action == 0 and event.key == 342:  # ALT
        show = not show    
    
def on_world_render_last(context):
    if not show:
        return
    
    poseStack  = context.matrixStack()
    bufferSource = minecraft.renderBuffers().bufferSource()
    
    dispatcher = minecraft.getBlockRenderer()
    state = Blocks.TNT.defaultBlockState()
    camera = context.camera() 
    
    cameraPos = camera.getPosition()
    
    poseStack.pushPose()
    poseStack.translate(
        target_pos.x - cameraPos.x,
        target_pos.y - cameraPos.y,
        target_pos.z - cameraPos.z
    )
    
    dispatcher.renderSingleBlock(state, poseStack, bufferSource, 0xF000F0, OverlayTexture.NO_OVERLAY)
    poseStack.popPose()
    
    bufferSource.endBatch(RenderType.solid())
    
def changepos():
    global target_pos
    target_pos = target_pos.add(0, 0, 0.005)



set_interval(changepos, 1)
add_event_listener("key", on_press_key)
WorldRenderEvents.LAST.register(WorldRenderEventsLast(on_world_render_last))
add_event_listener("tick", lambda e: None)